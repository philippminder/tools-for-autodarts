name: release
'on':
  push:
    branches:
      - main
      - tools-2.0.0

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

jobs:
  draft_release:
    permissions:
      contents: write # Allows this job to create releases

    strategy:
      fail-fast: true
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      prerelease: ${{ steps.release-flags.outputs.prerelease }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          # cache: 'npm'

      - run: yarn install --no-frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Get Package Version
        id: get-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - run: yarn build
      - run: yarn zip
      - run: yarn build:firefox
      - run: yarn zip:firefox

      - name: Set Release Flags
        id: release-flags
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/tools-2.0.0" ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Live Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          name: ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: ${{ steps.release-flags.outputs.prerelease }}
          files: |
            .output/autodarts-tools-${{ steps.get-version.outputs.version }}-chrome.zip
            .output/autodarts-tools-${{ steps.get-version.outputs.version }}-firefox.zip

  build_ios_app:
    permissions:
      contents: write # Allows this job to create releases
    
    runs-on: macos-latest
    timeout-minutes: 30
    needs: draft_release

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: yarn install --no-frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      
      - name: Get Package Version
        run: echo "VERSION=${{ needs.draft_release.outputs.version }}" >> $GITHUB_ENV
        
      - name: Build Safari Extension
        run: |
          yarn build -b safari
          bun run scripts/safari.ts
      
      - name: Install latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Build and Archive iOS App
        run: |
          cd "Tools for Autodarts"
          # Build the archive with the correct scheme
          xcodebuild -project "Tools for Autodarts.xcodeproj" -scheme "Tools for Autodarts (iOS)" -configuration Release -archivePath "./build/ToolsForAutodarts.xcarchive" archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          
          # Verify the archive was created
          ls -la ./build/ToolsForAutodarts.xcarchive/Products/Applications/
      
      - name: Create IPA File
        run: |
          # Switch to correct directory
          cd "Tools for Autodarts"
          
          # Create Payload directory
          mkdir -p Payload
          
          # Copy the .app file to the Payload directory
          cp -R "./build/ToolsForAutodarts.xcarchive/Products/Applications/Tools for Autodarts.app" Payload/
          
          # Create zip file and rename to .ipa
          zip -r "autodarts-tools-ios.ipa" Payload
          
          # Move to output directory
          mkdir -p ../.output
          mv "autodarts-tools-ios.ipa" ../.output/
          
          # Cleanup
          rm -rf Payload
          
          # Verify IPA was created
          ls -la ../.output/
      
      - name: Update Release with IPA File
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ needs.draft_release.outputs.version }}
          name: ${{ needs.draft_release.outputs.version }}
          draft: false
          prerelease: ${{ needs.draft_release.outputs.prerelease }}
          files: |
            .output/autodarts-tools-ios.ipa

  update_altstore_source:
    permissions:
      contents: write # Allows this job to commit changes
    
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [draft_release, build_ios_app]
    
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          
      - name: Download IPA from Live Release
        run: |
          # Create output directory
          mkdir -p .output
          
          # Download the IPA file from the live release
          curl -L -o .output/autodarts-tools-ios.ipa \
            "https://github.com/${{ github.repository }}/releases/download/${{ needs.draft_release.outputs.version }}/autodarts-tools-ios.ipa"
          
          # Verify the file was downloaded
          ls -la .output/
          
      - name: Update AltStore Source
        run: |
          node scripts/update-altstore-source.js "${{ needs.draft_release.outputs.version }}" "${{ needs.draft_release.outputs.prerelease }}"
          
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Autodarts_Tools_Source.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update AltStore source for version ${{ needs.draft_release.outputs.version }}"
            git push
          fi

      - name: Create Pull Request for AltStore Source Update (Fallback)
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update AltStore source for version ${{ needs.draft_release.outputs.version }}"
          title: "Update AltStore source for version ${{ needs.draft_release.outputs.version }}"
          body: |
            This PR updates the AltStore source file with the new version ${{ needs.draft_release.outputs.version }}.
            
            Changes:
            - Updated version information in Autodarts_Tools_Source.json
            - Added news entry for the new release
            
            This PR was automatically created by the release workflow as a fallback when direct push failed.
          branch: update-altstore-source-${{ needs.draft_release.outputs.version }}
          delete-branch: true
          base: main
